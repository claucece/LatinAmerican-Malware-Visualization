//constructor function to draw the binary visualization
function Binary() {
  this.name = "binary";
  this.isMalware = false;

  word = "MALWAR";
  ascii = [],
    font = {
      M: [7, 5, 5, 5],
      A: [5, 5, 5, 7],
      L: [7, 5, 5, 7],
      W: [7, 4, 7, 7],
      A: [7, 7, 4, 4],
      R: [1, 1, 1, 1]
    };

  this.draw = function() {
    if (this.isMalware) {
      word.split('').forEach(function(c) {
        size = (font[c].reduce(function(r, a) {
          return r | a;
        }, 0)).toString(2).length;

        font[c].forEach(function(a, i) {
          var temp = a.toString(2).split('').map(function(c) {
            return +c ? '+' : ' ';
          });
          while (temp.length < size) {
            temp.unshift(' ');
          }
          ascii[i] = ascii[i] || [];
          ascii[i].push(temp.join(''));
        });
      });
      toDraw = ascii.map(function(a) {
        return a.join(' ');
      }).join('\n')


      var spectrum = fourier.analyze();
      energy = fourier.getEnergy("treble");

      fill("red");
      if (energy > 70) {
        for (i = 0; i < 50; i++) {
          text(toDraw[i], i * 100, i * 10);
          text(toDraw[i], i * 10, i * 100);
        }
      };
    }

  };
}
