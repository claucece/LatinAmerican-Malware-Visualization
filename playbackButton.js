// displays and handles clicks on the playback button.
function PlaybackButton() {
  this.x = width - 500; // the x coordinate for position.
  this.y = height - 200; // the y coordinate for position.
  this.width = 50;
  this.height = 50;

  // flag to determine whether to play or pause after the button is clicked and
  // to determine which icon to draw.
  this.playing = false;

  // flag to determine whether to the non-malware music has ended by using a callback on the 'sketch.js' file.
  this.ended = false;

  // draws the buttons.
  this.draw = function() {
    fill(179, 18, 18);
    rect(this.x - 15, this.y - 8, this.width + 20, this.height + 20);

    if (this.playing) { // if the 'non-malware' music is playing, draw the pause icon.
      fill(255, 255, 255);
      noStroke()
      rect(this.x, this.y, this.width / 2 - 10, this.height);
      rect(this.x + (this.width / 2 + 2), this.y, this.width / 2 - 10, this.height);
    } else if (this.ended) { // if the 'non-malware' music has ended, draw the play icon.
      noStroke();
      fill(255, 255, 255);
      triangle(this.x, this.y, this.x + this.width - 10, this.y + this.height / 2, this.x, this.y + this.height)
    } else { // if the 'non-malware' music has stoped, draw the play icon.
      noStroke();
      fill(255, 255, 255);
      triangle(this.x, this.y, this.x + this.width - 10, this.y + this.height / 2, this.x, this.y + this.height);
    }
  };

  // checks for clicks on the button, starts or pauses the 'non-malware's sound.
  // @returns true if clicked; false, otherwise.
  this.hitCheck = function() {
    if (mouseX > this.x && mouseX < this.x + this.width && mouseY > this.y && mouseY < this.y + this.height) {
      if (sound.isPlaying()) {
        // stop the sound.
        sound.stop();
      } else {
        // play the sound.
        sound.play();
      }

      this.playing = !this.playing;
      return true;
    }
    return false;
  };
}