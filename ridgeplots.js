//constructor function to draw the ridge plot visualization
function RidgePlot() {
	//name of the visualisation
	this.name = "ridgeplot";
    
    this.output = [];
    this.startX = width / 5;
    this.endY = height / 5;
    this.startY = height - this.endY;
    this.spectrumWidth = (width / 5) * 3;
    
    var speed = 0.7;
    
	// draw the visualization to the screen
	this.draw = function() {
		push();
		stroke(255);
        strokeWeight(2);
        console.log("getting here?");
        
        if (frameCount % 30 == 0) {
            this.addWave(1);
        }
        
        for (var i = 0; i < this.output.length; i++) {
            var o = this.output[i];
            beginShape();
            
            for (var j = 0; j < o.length; j++) {
                o[j].y -= this.speed;
                vertex(o[j].x, o[j].y);
            }
            endShape();
            
            if (o[0].y < this.endY) {
                this.output.splice(i, 1);
            }
        }

		pop();
	};
    /*
     *draws a needle to an individual plot
	 *@param energy: The energy for the current frequency
	 *@param centreX: central x coordinate of the plot rectangle
	 *@param bottomY: The bottom y coordinate of the plot rectangle
	 */
	this.addWave = function() {
        var w = fourier.waveform();
        var output_wave = [];
        var smallScale = 3;
        var bigScale = 200;
        
        for (var i=0; i < w.length; i++) {
            if (i % 20 == 0) {
                var x = map(i, 0, 1024, this.startX, this.startX + this.spectrumWidth);
                if (i < 1024 * 0.25 || i > 1024 * 0.75) {
                    var y = map(w[i], -1, 1, -smallScale, smallScale);
                    
                    output_wave.push({
                        x: x,
                        y: this.startY + y,
                    })
                } else {
                    var y = map(w[i], -1, 1, -bigScale, bigScale);
                    output_wave.push({
                        x: x,
                        y: this.startY + y,
                    })
                }
            }
        }
        this.output.push(output_wave);
	};
}
