//global for the controls and input.
var controls = null;
//store visualisations in a container.
var vis = null;
//variable for the p5 sound object.
var sound = null;
//variable for p5 fast fourier transform
var fourier;
var noiseStep;
var prog;

function preload() {
  // By Bernd Krueger on music from Ravel, taken from: http://www.piano-midi.de/ravel.html , licensed with CC: http://www.piano-midi.de/copy.htm
  sound = loadSound('assets/rav-eau-1.mp3');
}

function setup() {
  createCanvas(windowWidth, windowHeight);
  background(0);

  controls = new ControlsAndInput();

  // instantiate the fft object
  fourier = new p5.FFT();
  
  //create a new visualisation container and add the visualisations
  vis = new Visualisations();
  vis.add(new Spectrum()); // adds the spectrum visualization.
  vis.add(new WavePattern()); // adds the wave pattern visualization.
  vis.add(new RidgePlot()); // adds the ridgeplot visualization.
  vis.add(new Noise()); // adds the noise visualization.
  vis.add(new Hash()); // adds the hash visualization: draws the base hash to the screen moving with the malware music.
  vis.add(new Binary()); // add the binary visualization.


  // add the different parts of the malware music.
  musicHigh = new Music();
  musicMid = new Music();
  musicLow = new Music();
}

function draw() {
  background(0);

  // draws the description of the website.
  fill("#33180B");
  rect(40, 0, windowWidth / 3.5, windowHeight / 1.8);
  var p1 = 'Malware is the hidden threat. The ultimate tool that gets installed and imperceptibely damages. For years, human rights activists in Latin America have been targeted with malware, specifically, with spyware.';
  fill('rgb(180, 180, 180)');
  textSize(38);
  textFont('Helvetica');
  text(p1, 60, 5, 800, 100);

  var p2 = 'This project aims to be a sensory experience of how malware fills like to these activists: when they realise that malware is installed, they are confused and in fear. They feel like a random noise have taken over their device. This experience is how they feel.';
  text(p2, 60, 150, 800, 500);

  var p3 = 'There are two ways you can play with this: 1. press the play button to hear and see the un-malware state with a calm song, 2. press enter to hear and see the malware state with noise (stop this with the space bar).';
  text(p3, 60, 490, 800, 500);

  //draw the selected visualisations
  for (var i = 0; i < vis.visuals.length; i++) {
        vis.visuals[i].draw();
  }

  //draw the controls (a play/pause button) on the bottom middle of the page.
  controls.draw();

  keyPressed();
}

// functionality that signals the controls that the mouse has been clicked.
function mouseClicked() {
  controls.mousePressed();
}

// functionality that plays/stops the music depending on the key pressed.
function keyPressed() {
  var textToDisplay;
  if (keyCode == 32) {
    musicHigh.stop();
    musicMid.stop();
    musicLow.stop();
      
    for (var i = 0; i < vis.visuals.length; i++) {
      vis.visuals[i].isMalware = false;
    }

    textToDisplay = "";
    text(textToDisplay, width/2, height/2);
  } else if (keyCode == 13) {
    musicHigh.startNoiseHigh();
    musicMid.startNoiseMid();
    musicLow.startNoiseLow();
      
          
    for (var i = 0; i < vis.visuals.length; i++) {
      vis.visuals[i].isMalware = true;
    }
      
    textToDisplay = "Malware is playing";
    fill("red");
    text(textToDisplay, width/1.3, height/1.3);
  }
}

// when the window has been resized. Resize canvas to fit
// if the visualisation needs to be resized call its onResize method
function windowResized() {
  resizeCanvas(windowWidth, windowHeight);
  if (vis.selectedVisual.hasOwnProperty('onResize')) {
    vis.selectedVisual.onResize();
  }
}